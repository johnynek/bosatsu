package Euler/P6

# The sum of the squares of the first ten natural numbers is,
# 
# 1^2 + 2^2 + ... + 10^2 = 385
# The square of the sum of the first ten natural numbers is,
# 
# (1 + 2 + ... + 10)^2 = 552 = 3025
# Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 âˆ’ 385 = 2640.
# 
# Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.
# 
# diff(n) = (sum(n))^2 - sum2(n)
# diff(n+1) - diff(n) = (sum(n+1))^2 - sum(n)^2 - sum2(n+1) + sum2(n)
#   = (n+1 + sum(n))^2 - sum(n)^2 - (n+1)^2
#   = (n+1)^2 + 2(n+1)sum(n) - (n+1)^2
#   = 2(n+1)sum(n)
#   = 2(n+1)*((n+1)*n)/2
#   = n*(n+1)^2
# 
# diff(1) = 0
# 
# diff(2) = diff(1) + 1*2^2 = 4
# diff(n) = sum(\x -> x*(x+1)*(x+1), n)

operator + = add
operator - = sub
operator * = times
operator == = eq_Int

# sum 0 to n on the given function
def sum(fn, n):
  int_loop(n, 0, \i, r ->
    i = i - 1
    (i, r + fn(i)))

# keeping n curried here, note diff is a function
diff = sum(\x ->
  x1 = x + 1
  x2 = x1 * x1
  x * x2)

test0 = Assertion(diff(10) == 2640, "matched problem")
test1 = Assertion(diff(100) == 25164150, "matched problem")
tests = TestSuite("two examples", [test0, test1])
