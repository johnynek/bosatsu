package Bosatsu/List

import Bosatsu/Bool [ not ]
export [ eq_List, for_all, sum ]

def for_all(xs: List[a], fn: a -> Bool) -> Bool:
  recur xs:
    []: True
    [head, *tail]:
      if fn(head): for_all(tail, fn)
      else: False

def sum(as: List[Int]) -> Int:
  as.foldLeft(0, add)

def eq_List(fn: a -> a -> Bool, a: List[a], b: List[a]) -> Bool:
  recur a:
    []:
      match b:
        []: True
        _: False
    [ah, *at]:
      match b:
        []: False
        [bh, *bt]:
          eq_List(fn, at, bt) if fn(ah, bh) else False

eq_li = eq_List(eq_Int)

tests = TestSuite("List tests", [
  Assertion([1, 2, 3].eq_li([1, 2, 3]), "list [1, 2, 3]"),
  Assertion(not([1, 2, 3].eq_li([1, 2])), "list [1, 2, 3] != [1, 2]"),
  ])

