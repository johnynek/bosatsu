package Ackermann

enum Nat: Zero, Succ(n: Nat)

def ack1(n: Nat) -> (Nat -> Nat):
  recur n:
      case Zero: Succ
      case Succ(n_prev):
        ack_p = ack1(n_prev)
        def inner(m: Nat) -> Nat:
            ack_p(recur m:
                case Zero: Succ(Zero)
                case Succ(m_prev): inner(m_prev))
        inner


def ack(n: Nat, m: Nat) -> Nat: ack1(n)(m)