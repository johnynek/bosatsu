package Euler/Three

# see:
# https://projecteuler.net/problem=3
# What is the largest prime factor of the number 600851475143 ?

#number = 13195
number = 600851475143

operator - = sub
operator + = add
operator == = eq_Int

def divides(a, b): b.mod_Int(a) == 0

def smallest_factor(n):
  match n:
    1: 1
    _:
      int_loop(n, -1, \i, res ->
        trial = n - i + 2
        if trial.divides(n): (0, trial)
        else: (i - 1, -1))

def all_factors(n):
  int_loop(n, [], \i, facs ->
    next_factor = smallest_factor(i)
    next_facs = [next_factor, *facs]
    match i.div(next_factor):
      None | Some(1): (0, next_facs)
      Some(smaller): (smaller, next_facs))

def largest_factor(n):
  match all_factors(n):
    []: n
    [h, *_]: h

test = Assertion(largest_factor(number) == 6857, "trial")
