package Bosatsu/Predef

export [
  Bool(),
  Comparison(),
  Int,
  Option(),
  List(),
  String,
  Test(),
  add,
  eq_Int,
  cmp_Int,
  foldLeft,
  mod_Int,
  sub,
  range,
  times,
  trace,
]

enum Bool:
  False
  True

enum List:
  EmptyList
  NonEmptyList(head: a, tail: List[a])

external def foldLeft(lst: List[a], item: b, fn: b -> a -> b) -> b

external def range(exclusiveUpper: Int) -> List[Int]

enum Comparison:
  LT
  EQ
  GT

enum Option:
  None
  Some(v)

external struct Int

external def add(a: Int, b: Int) -> Int
external def sub(a: Int, b: Int) -> Int
external def times(a: Int, b: Int) -> Int
external def eq_Int(a: Int, b: Int) -> Bool
external def cmp_Int(a: Int, b: Int) -> Comparison
external def mod_Int(a: Int, mod: Int) -> Int

external struct String

enum Test:
  TestAssert(value: Bool)
  TestLabel(label: String, test: Test)
  TestList(tests: List[Test])

external def trace(prefix: String, item: a) -> a
